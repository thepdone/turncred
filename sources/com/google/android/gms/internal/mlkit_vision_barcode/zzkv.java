package com.google.android.gms.internal.mlkit_vision_barcode;

import androidx.appcompat.app.AppCompatDelegate;
import androidx.core.location.LocationRequestCompat;
import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import com.nimbusds.jose.jwk.gen.OctetSequenceKeyGenerator;
import java.io.IOException;
import okhttp3.internal.ws.WebSocketProtocol;

/* compiled from: com.google.android.gms:play-services-mlkit-barcode-scanning@@18.3.1 */
/* loaded from: classes3.dex */
final class zzkv implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzkv zza = new zzkv();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzbd;
    private static final FieldDescriptor zzbe;
    private static final FieldDescriptor zzbf;
    private static final FieldDescriptor zzbg;
    private static final FieldDescriptor zzbh;
    private static final FieldDescriptor zzbi;
    private static final FieldDescriptor zzbj;
    private static final FieldDescriptor zzbk;
    private static final FieldDescriptor zzbl;
    private static final FieldDescriptor zzbm;
    private static final FieldDescriptor zzbn;
    private static final FieldDescriptor zzbo;
    private static final FieldDescriptor zzbp;
    private static final FieldDescriptor zzbq;
    private static final FieldDescriptor zzbr;
    private static final FieldDescriptor zzbs;
    private static final FieldDescriptor zzbt;
    private static final FieldDescriptor zzbu;
    private static final FieldDescriptor zzbv;
    private static final FieldDescriptor zzbw;
    private static final FieldDescriptor zzbx;
    private static final FieldDescriptor zzby;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzfa zzfaVar = new zzfa();
        zzfaVar.zza(1);
        zzb = builder.withProperty(zzfaVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzfa zzfaVar2 = new zzfa();
        zzfaVar2.zza(2);
        zzc = builder2.withProperty(zzfaVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzfa zzfaVar3 = new zzfa();
        zzfaVar3.zza(37);
        zzd = builder3.withProperty(zzfaVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzfa zzfaVar4 = new zzfa();
        zzfaVar4.zza(61);
        zze = builder4.withProperty(zzfaVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzfa zzfaVar5 = new zzfa();
        zzfaVar5.zza(3);
        zzf = builder5.withProperty(zzfaVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzfa zzfaVar6 = new zzfa();
        zzfaVar6.zza(20);
        zzg = builder6.withProperty(zzfaVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzfa zzfaVar7 = new zzfa();
        zzfaVar7.zza(4);
        zzh = builder7.withProperty(zzfaVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzfa zzfaVar8 = new zzfa();
        zzfaVar8.zza(29);
        zzi = builder8.withProperty(zzfaVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzfa zzfaVar9 = new zzfa();
        zzfaVar9.zza(5);
        zzj = builder9.withProperty(zzfaVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzfa zzfaVar10 = new zzfa();
        zzfaVar10.zza(59);
        zzk = builder10.withProperty(zzfaVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzfa zzfaVar11 = new zzfa();
        zzfaVar11.zza(6);
        zzl = builder11.withProperty(zzfaVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzfa zzfaVar12 = new zzfa();
        zzfaVar12.zza(79);
        zzm = builder12.withProperty(zzfaVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzfa zzfaVar13 = new zzfa();
        zzfaVar13.zza(7);
        zzn = builder13.withProperty(zzfaVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzfa zzfaVar14 = new zzfa();
        zzfaVar14.zza(58);
        zzo = builder14.withProperty(zzfaVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzfa zzfaVar15 = new zzfa();
        zzfaVar15.zza(48);
        zzp = builder15.withProperty(zzfaVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzfa zzfaVar16 = new zzfa();
        zzfaVar16.zza(49);
        zzq = builder16.withProperty(zzfaVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzfa zzfaVar17 = new zzfa();
        zzfaVar17.zza(18);
        zzr = builder17.withProperty(zzfaVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzfa zzfaVar18 = new zzfa();
        zzfaVar18.zza(26);
        zzs = builder18.withProperty(zzfaVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzfa zzfaVar19 = new zzfa();
        zzfaVar19.zza(27);
        zzt = builder19.withProperty(zzfaVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzfa zzfaVar20 = new zzfa();
        zzfaVar20.zza(28);
        zzu = builder20.withProperty(zzfaVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzfa zzfaVar21 = new zzfa();
        zzfaVar21.zza(44);
        zzv = builder21.withProperty(zzfaVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzfa zzfaVar22 = new zzfa();
        zzfaVar22.zza(45);
        zzw = builder22.withProperty(zzfaVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzfa zzfaVar23 = new zzfa();
        zzfaVar23.zza(19);
        zzx = builder23.withProperty(zzfaVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzfa zzfaVar24 = new zzfa();
        zzfaVar24.zza(21);
        zzy = builder24.withProperty(zzfaVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzfa zzfaVar25 = new zzfa();
        zzfaVar25.zza(22);
        zzz = builder25.withProperty(zzfaVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzfa zzfaVar26 = new zzfa();
        zzfaVar26.zza(8);
        zzA = builder26.withProperty(zzfaVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzfa zzfaVar27 = new zzfa();
        zzfaVar27.zza(9);
        zzB = builder27.withProperty(zzfaVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzfa zzfaVar28 = new zzfa();
        zzfaVar28.zza(10);
        zzC = builder28.withProperty(zzfaVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzfa zzfaVar29 = new zzfa();
        zzfaVar29.zza(11);
        zzD = builder29.withProperty(zzfaVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzfa zzfaVar30 = new zzfa();
        zzfaVar30.zza(12);
        zzE = builder30.withProperty(zzfaVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzfa zzfaVar31 = new zzfa();
        zzfaVar31.zza(13);
        zzF = builder31.withProperty(zzfaVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzfa zzfaVar32 = new zzfa();
        zzfaVar32.zza(14);
        zzG = builder32.withProperty(zzfaVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzfa zzfaVar33 = new zzfa();
        zzfaVar33.zza(15);
        zzH = builder33.withProperty(zzfaVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzfa zzfaVar34 = new zzfa();
        zzfaVar34.zza(16);
        zzI = builder34.withProperty(zzfaVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzfa zzfaVar35 = new zzfa();
        zzfaVar35.zza(17);
        zzJ = builder35.withProperty(zzfaVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzfa zzfaVar36 = new zzfa();
        zzfaVar36.zza(23);
        zzK = builder36.withProperty(zzfaVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzfa zzfaVar37 = new zzfa();
        zzfaVar37.zza(24);
        zzL = builder37.withProperty(zzfaVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzfa zzfaVar38 = new zzfa();
        zzfaVar38.zza(25);
        zzM = builder38.withProperty(zzfaVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzfa zzfaVar39 = new zzfa();
        zzfaVar39.zza(39);
        zzN = builder39.withProperty(zzfaVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzfa zzfaVar40 = new zzfa();
        zzfaVar40.zza(40);
        zzO = builder40.withProperty(zzfaVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzfa zzfaVar41 = new zzfa();
        zzfaVar41.zza(30);
        zzP = builder41.withProperty(zzfaVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzfa zzfaVar42 = new zzfa();
        zzfaVar42.zza(31);
        zzQ = builder42.withProperty(zzfaVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzfa zzfaVar43 = new zzfa();
        zzfaVar43.zza(32);
        zzR = builder43.withProperty(zzfaVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzfa zzfaVar44 = new zzfa();
        zzfaVar44.zza(33);
        zzS = builder44.withProperty(zzfaVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzfa zzfaVar45 = new zzfa();
        zzfaVar45.zza(34);
        zzT = builder45.withProperty(zzfaVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzfa zzfaVar46 = new zzfa();
        zzfaVar46.zza(35);
        zzU = builder46.withProperty(zzfaVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzfa zzfaVar47 = new zzfa();
        zzfaVar47.zza(36);
        zzV = builder47.withProperty(zzfaVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzfa zzfaVar48 = new zzfa();
        zzfaVar48.zza(46);
        zzW = builder48.withProperty(zzfaVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzfa zzfaVar49 = new zzfa();
        zzfaVar49.zza(47);
        zzX = builder49.withProperty(zzfaVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzfa zzfaVar50 = new zzfa();
        zzfaVar50.zza(69);
        zzY = builder50.withProperty(zzfaVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzfa zzfaVar51 = new zzfa();
        zzfaVar51.zza(42);
        zzZ = builder51.withProperty(zzfaVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzfa zzfaVar52 = new zzfa();
        zzfaVar52.zza(50);
        zzaa = builder52.withProperty(zzfaVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzfa zzfaVar53 = new zzfa();
        zzfaVar53.zza(51);
        zzab = builder53.withProperty(zzfaVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzfa zzfaVar54 = new zzfa();
        zzfaVar54.zza(52);
        zzac = builder54.withProperty(zzfaVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzfa zzfaVar55 = new zzfa();
        zzfaVar55.zza(53);
        zzad = builder55.withProperty(zzfaVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzfa zzfaVar56 = new zzfa();
        zzfaVar56.zza(54);
        zzae = builder56.withProperty(zzfaVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzfa zzfaVar57 = new zzfa();
        zzfaVar57.zza(60);
        zzaf = builder57.withProperty(zzfaVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzfa zzfaVar58 = new zzfa();
        zzfaVar58.zza(85);
        zzag = builder58.withProperty(zzfaVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzfa zzfaVar59 = new zzfa();
        zzfaVar59.zza(86);
        zzah = builder59.withProperty(zzfaVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzfa zzfaVar60 = new zzfa();
        zzfaVar60.zza(87);
        zzai = builder60.withProperty(zzfaVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzfa zzfaVar61 = new zzfa();
        zzfaVar61.zza(55);
        zzaj = builder61.withProperty(zzfaVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzfa zzfaVar62 = new zzfa();
        zzfaVar62.zza(56);
        zzak = builder62.withProperty(zzfaVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzfa zzfaVar63 = new zzfa();
        zzfaVar63.zza(57);
        zzal = builder63.withProperty(zzfaVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzfa zzfaVar64 = new zzfa();
        zzfaVar64.zza(62);
        zzam = builder64.withProperty(zzfaVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzfa zzfaVar65 = new zzfa();
        zzfaVar65.zza(63);
        zzan = builder65.withProperty(zzfaVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzfa zzfaVar66 = new zzfa();
        zzfaVar66.zza(64);
        zzao = builder66.withProperty(zzfaVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzfa zzfaVar67 = new zzfa();
        zzfaVar67.zza(65);
        zzap = builder67.withProperty(zzfaVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzfa zzfaVar68 = new zzfa();
        zzfaVar68.zza(66);
        zzaq = builder68.withProperty(zzfaVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzfa zzfaVar69 = new zzfa();
        zzfaVar69.zza(67);
        zzar = builder69.withProperty(zzfaVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzfa zzfaVar70 = new zzfa();
        zzfaVar70.zza(68);
        zzas = builder70.withProperty(zzfaVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzfa zzfaVar71 = new zzfa();
        zzfaVar71.zza(70);
        zzat = builder71.withProperty(zzfaVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzfa zzfaVar72 = new zzfa();
        zzfaVar72.zza(71);
        zzau = builder72.withProperty(zzfaVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzfa zzfaVar73 = new zzfa();
        zzfaVar73.zza(72);
        zzav = builder73.withProperty(zzfaVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzfa zzfaVar74 = new zzfa();
        zzfaVar74.zza(73);
        zzaw = builder74.withProperty(zzfaVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzfa zzfaVar75 = new zzfa();
        zzfaVar75.zza(74);
        zzax = builder75.withProperty(zzfaVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzfa zzfaVar76 = new zzfa();
        zzfaVar76.zza(75);
        zzay = builder76.withProperty(zzfaVar76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzfa zzfaVar77 = new zzfa();
        zzfaVar77.zza(76);
        zzaz = builder77.withProperty(zzfaVar77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzfa zzfaVar78 = new zzfa();
        zzfaVar78.zza(77);
        zzaA = builder78.withProperty(zzfaVar78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzfa zzfaVar79 = new zzfa();
        zzfaVar79.zza(78);
        zzaB = builder79.withProperty(zzfaVar79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzfa zzfaVar80 = new zzfa();
        zzfaVar80.zza(80);
        zzaC = builder80.withProperty(zzfaVar80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzfa zzfaVar81 = new zzfa();
        zzfaVar81.zza(81);
        zzaD = builder81.withProperty(zzfaVar81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzfa zzfaVar82 = new zzfa();
        zzfaVar82.zza(82);
        zzaE = builder82.withProperty(zzfaVar82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzfa zzfaVar83 = new zzfa();
        zzfaVar83.zza(83);
        zzaF = builder83.withProperty(zzfaVar83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzfa zzfaVar84 = new zzfa();
        zzfaVar84.zza(84);
        zzaG = builder84.withProperty(zzfaVar84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzfa zzfaVar85 = new zzfa();
        zzfaVar85.zza(88);
        zzaH = builder85.withProperty(zzfaVar85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzfa zzfaVar86 = new zzfa();
        zzfaVar86.zza(89);
        zzaI = builder86.withProperty(zzfaVar86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzfa zzfaVar87 = new zzfa();
        zzfaVar87.zza(90);
        zzaJ = builder87.withProperty(zzfaVar87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzfa zzfaVar88 = new zzfa();
        zzfaVar88.zza(91);
        zzaK = builder88.withProperty(zzfaVar88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzfa zzfaVar89 = new zzfa();
        zzfaVar89.zza(92);
        zzaL = builder89.withProperty(zzfaVar89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzfa zzfaVar90 = new zzfa();
        zzfaVar90.zza(93);
        zzaM = builder90.withProperty(zzfaVar90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzfa zzfaVar91 = new zzfa();
        zzfaVar91.zza(94);
        zzaN = builder91.withProperty(zzfaVar91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzfa zzfaVar92 = new zzfa();
        zzfaVar92.zza(95);
        zzaO = builder92.withProperty(zzfaVar92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzfa zzfaVar93 = new zzfa();
        zzfaVar93.zza(96);
        zzaP = builder93.withProperty(zzfaVar93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzfa zzfaVar94 = new zzfa();
        zzfaVar94.zza(97);
        zzaQ = builder94.withProperty(zzfaVar94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzfa zzfaVar95 = new zzfa();
        zzfaVar95.zza(98);
        zzaR = builder95.withProperty(zzfaVar95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzfa zzfaVar96 = new zzfa();
        zzfaVar96.zza(99);
        zzaS = builder96.withProperty(zzfaVar96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzfa zzfaVar97 = new zzfa();
        zzfaVar97.zza(100);
        zzaT = builder97.withProperty(zzfaVar97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzfa zzfaVar98 = new zzfa();
        zzfaVar98.zza(101);
        zzaU = builder98.withProperty(zzfaVar98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzfa zzfaVar99 = new zzfa();
        zzfaVar99.zza(102);
        zzaV = builder99.withProperty(zzfaVar99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzfa zzfaVar100 = new zzfa();
        zzfaVar100.zza(103);
        zzaW = builder100.withProperty(zzfaVar100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzfa zzfaVar101 = new zzfa();
        zzfaVar101.zza(LocationRequestCompat.QUALITY_LOW_POWER);
        zzaX = builder101.withProperty(zzfaVar101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzfa zzfaVar102 = new zzfa();
        zzfaVar102.zza(105);
        zzaY = builder102.withProperty(zzfaVar102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzfa zzfaVar103 = new zzfa();
        zzfaVar103.zza(106);
        zzaZ = builder103.withProperty(zzfaVar103.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzfa zzfaVar104 = new zzfa();
        zzfaVar104.zza(107);
        zzba = builder104.withProperty(zzfaVar104.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzfa zzfaVar105 = new zzfa();
        zzfaVar105.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR);
        zzbb = builder105.withProperty(zzfaVar105.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzfa zzfaVar106 = new zzfa();
        zzfaVar106.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY);
        zzbc = builder106.withProperty(zzfaVar106.zzb()).build();
        FieldDescriptor.Builder builder107 = FieldDescriptor.builder("onDeviceStainRemovalLogEvent");
        zzfa zzfaVar107 = new zzfa();
        zzfaVar107.zza(110);
        zzbd = builder107.withProperty(zzfaVar107.zzb()).build();
        FieldDescriptor.Builder builder108 = FieldDescriptor.builder("aggregatedOnDeviceStainRemovalLogEvent");
        zzfa zzfaVar108 = new zzfa();
        zzfaVar108.zza(111);
        zzbe = builder108.withProperty(zzfaVar108.zzb()).build();
        FieldDescriptor.Builder builder109 = FieldDescriptor.builder("stainRemovalOptionalModuleLogEvent");
        zzfa zzfaVar109 = new zzfa();
        zzfaVar109.zza(OctetSequenceKeyGenerator.MIN_KEY_SIZE_BITS);
        zzbf = builder109.withProperty(zzfaVar109.zzb()).build();
        FieldDescriptor.Builder builder110 = FieldDescriptor.builder("onDeviceShadowRemovalLogEvent");
        zzfa zzfaVar110 = new zzfa();
        zzfaVar110.zza(113);
        zzbg = builder110.withProperty(zzfaVar110.zzb()).build();
        FieldDescriptor.Builder builder111 = FieldDescriptor.builder("aggregatedOnDeviceShadowRemovalLogEvent");
        zzfa zzfaVar111 = new zzfa();
        zzfaVar111.zza(114);
        zzbh = builder111.withProperty(zzfaVar111.zzb()).build();
        FieldDescriptor.Builder builder112 = FieldDescriptor.builder("shadowRemovalOptionalModuleLogEvent");
        zzfa zzfaVar112 = new zzfa();
        zzfaVar112.zza(115);
        zzbi = builder112.withProperty(zzfaVar112.zzb()).build();
        FieldDescriptor.Builder builder113 = FieldDescriptor.builder("onDeviceDigitalInkSegmentationLogEvent");
        zzfa zzfaVar113 = new zzfa();
        zzfaVar113.zza(116);
        zzbj = builder113.withProperty(zzfaVar113.zzb()).build();
        FieldDescriptor.Builder builder114 = FieldDescriptor.builder("onDeviceDocumentScannerStartLogEvent");
        zzfa zzfaVar114 = new zzfa();
        zzfaVar114.zza(117);
        zzbk = builder114.withProperty(zzfaVar114.zzb()).build();
        FieldDescriptor.Builder builder115 = FieldDescriptor.builder("onDeviceDocumentScannerFinishLogEvent");
        zzfa zzfaVar115 = new zzfa();
        zzfaVar115.zza(118);
        zzbl = builder115.withProperty(zzfaVar115.zzb()).build();
        FieldDescriptor.Builder builder116 = FieldDescriptor.builder("onDeviceDocumentScannerUiStartLogEvent");
        zzfa zzfaVar116 = new zzfa();
        zzfaVar116.zza(119);
        zzbm = builder116.withProperty(zzfaVar116.zzb()).build();
        FieldDescriptor.Builder builder117 = FieldDescriptor.builder("onDeviceDocumentScannerUiFinishLogEvent");
        zzfa zzfaVar117 = new zzfa();
        zzfaVar117.zza(120);
        zzbn = builder117.withProperty(zzfaVar117.zzb()).build();
        FieldDescriptor.Builder builder118 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionStartLogEvent");
        zzfa zzfaVar118 = new zzfa();
        zzfaVar118.zza(121);
        zzbo = builder118.withProperty(zzfaVar118.zzb()).build();
        FieldDescriptor.Builder builder119 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionFinishLogEvent");
        zzfa zzfaVar119 = new zzfa();
        zzfaVar119.zza(122);
        zzbp = builder119.withProperty(zzfaVar119.zzb()).build();
        FieldDescriptor.Builder builder120 = FieldDescriptor.builder("onDeviceDocumentScannerUiCreateLogEvent");
        zzfa zzfaVar120 = new zzfa();
        zzfaVar120.zza(123);
        zzbq = builder120.withProperty(zzfaVar120.zzb()).build();
        FieldDescriptor.Builder builder121 = FieldDescriptor.builder("onDeviceSubjectSegmentationCreateLogEvent");
        zzfa zzfaVar121 = new zzfa();
        zzfaVar121.zza(124);
        zzbr = builder121.withProperty(zzfaVar121.zzb()).build();
        FieldDescriptor.Builder builder122 = FieldDescriptor.builder("onDeviceSubjectSegmentationLoadLogEvent");
        zzfa zzfaVar122 = new zzfa();
        zzfaVar122.zza(125);
        zzbs = builder122.withProperty(zzfaVar122.zzb()).build();
        FieldDescriptor.Builder builder123 = FieldDescriptor.builder("onDeviceSubjectSegmentationInferenceLogEvent");
        zzfa zzfaVar123 = new zzfa();
        zzfaVar123.zza(WebSocketProtocol.PAYLOAD_SHORT);
        zzbt = builder123.withProperty(zzfaVar123.zzb()).build();
        FieldDescriptor.Builder builder124 = FieldDescriptor.builder("aggregatedOnDeviceSubjectSegmentationLogEvent");
        zzfa zzfaVar124 = new zzfa();
        zzfaVar124.zza(127);
        zzbu = builder124.withProperty(zzfaVar124.zzb()).build();
        FieldDescriptor.Builder builder125 = FieldDescriptor.builder("subjectSegmentationOptionalModuleLogEvent");
        zzfa zzfaVar125 = new zzfa();
        zzfaVar125.zza(128);
        zzbv = builder125.withProperty(zzfaVar125.zzb()).build();
        FieldDescriptor.Builder builder126 = FieldDescriptor.builder("documentScannerUiModuleScreenViewEvent");
        zzfa zzfaVar126 = new zzfa();
        zzfaVar126.zza(129);
        zzbw = builder126.withProperty(zzfaVar126.zzb()).build();
        FieldDescriptor.Builder builder127 = FieldDescriptor.builder("documentScannerUiModuleScreenClickEvent");
        zzfa zzfaVar127 = new zzfa();
        zzfaVar127.zza(130);
        zzbx = builder127.withProperty(zzfaVar127.zzb()).build();
        FieldDescriptor.Builder builder128 = FieldDescriptor.builder("documentScannerUiModuleScreenErrorEvent");
        zzfa zzfaVar128 = new zzfa();
        zzfaVar128.zza(131);
        zzby = builder128.withProperty(zzfaVar128.zzb()).build();
    }

    private zzkv() {
    }

    @Override // com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zzrf zzrfVar = (zzrf) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zzrfVar.zzg());
        objectEncoderContext2.add(zzc, zzrfVar.zzc());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, zzrfVar.zzb());
        objectEncoderContext2.add(zzf, (Object) null);
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, (Object) null);
        objectEncoderContext2.add(zzn, zzrfVar.zzd());
        objectEncoderContext2.add(zzo, zzrfVar.zze());
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, (Object) null);
        objectEncoderContext2.add(zzN, (Object) null);
        objectEncoderContext2.add(zzO, (Object) null);
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, (Object) null);
        objectEncoderContext2.add(zzS, zzrfVar.zza());
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, (Object) null);
        objectEncoderContext2.add(zzaa, (Object) null);
        objectEncoderContext2.add(zzab, (Object) null);
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, (Object) null);
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
        objectEncoderContext2.add(zzap, (Object) null);
        objectEncoderContext2.add(zzaq, (Object) null);
        objectEncoderContext2.add(zzar, (Object) null);
        objectEncoderContext2.add(zzas, (Object) null);
        objectEncoderContext2.add(zzat, (Object) null);
        objectEncoderContext2.add(zzau, (Object) null);
        objectEncoderContext2.add(zzav, (Object) null);
        objectEncoderContext2.add(zzaw, (Object) null);
        objectEncoderContext2.add(zzax, (Object) null);
        objectEncoderContext2.add(zzay, (Object) null);
        objectEncoderContext2.add(zzaz, (Object) null);
        objectEncoderContext2.add(zzaA, (Object) null);
        objectEncoderContext2.add(zzaB, (Object) null);
        objectEncoderContext2.add(zzaC, (Object) null);
        objectEncoderContext2.add(zzaD, (Object) null);
        objectEncoderContext2.add(zzaE, (Object) null);
        objectEncoderContext2.add(zzaF, (Object) null);
        objectEncoderContext2.add(zzaG, (Object) null);
        objectEncoderContext2.add(zzaH, (Object) null);
        objectEncoderContext2.add(zzaI, (Object) null);
        objectEncoderContext2.add(zzaJ, (Object) null);
        objectEncoderContext2.add(zzaK, (Object) null);
        objectEncoderContext2.add(zzaL, (Object) null);
        objectEncoderContext2.add(zzaM, (Object) null);
        objectEncoderContext2.add(zzaN, (Object) null);
        objectEncoderContext2.add(zzaO, (Object) null);
        objectEncoderContext2.add(zzaP, (Object) null);
        objectEncoderContext2.add(zzaQ, (Object) null);
        objectEncoderContext2.add(zzaR, (Object) null);
        objectEncoderContext2.add(zzaS, (Object) null);
        objectEncoderContext2.add(zzaT, (Object) null);
        objectEncoderContext2.add(zzaU, (Object) null);
        objectEncoderContext2.add(zzaV, (Object) null);
        objectEncoderContext2.add(zzaW, (Object) null);
        objectEncoderContext2.add(zzaX, (Object) null);
        objectEncoderContext2.add(zzaY, (Object) null);
        objectEncoderContext2.add(zzaZ, zzrfVar.zzf());
        objectEncoderContext2.add(zzba, (Object) null);
        objectEncoderContext2.add(zzbb, (Object) null);
        objectEncoderContext2.add(zzbc, (Object) null);
        objectEncoderContext2.add(zzbd, (Object) null);
        objectEncoderContext2.add(zzbe, (Object) null);
        objectEncoderContext2.add(zzbf, (Object) null);
        objectEncoderContext2.add(zzbg, (Object) null);
        objectEncoderContext2.add(zzbh, (Object) null);
        objectEncoderContext2.add(zzbi, (Object) null);
        objectEncoderContext2.add(zzbj, (Object) null);
        objectEncoderContext2.add(zzbk, (Object) null);
        objectEncoderContext2.add(zzbl, (Object) null);
        objectEncoderContext2.add(zzbm, (Object) null);
        objectEncoderContext2.add(zzbn, (Object) null);
        objectEncoderContext2.add(zzbo, (Object) null);
        objectEncoderContext2.add(zzbp, (Object) null);
        objectEncoderContext2.add(zzbq, (Object) null);
        objectEncoderContext2.add(zzbr, (Object) null);
        objectEncoderContext2.add(zzbs, (Object) null);
        objectEncoderContext2.add(zzbt, (Object) null);
        objectEncoderContext2.add(zzbu, (Object) null);
        objectEncoderContext2.add(zzbv, (Object) null);
        objectEncoderContext2.add(zzbw, (Object) null);
        objectEncoderContext2.add(zzbx, (Object) null);
        objectEncoderContext2.add(zzby, (Object) null);
    }
}
