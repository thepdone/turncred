package com.google.android.gms.internal.mlkit_vision_face_bundled;

import androidx.appcompat.app.AppCompatDelegate;
import androidx.core.location.LocationRequestCompat;
import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import com.nimbusds.jose.jwk.gen.OctetSequenceKeyGenerator;
import java.io.IOException;
import okhttp3.internal.ws.WebSocketProtocol;

/* compiled from: com.google.mlkit:face-detection@@16.1.6 */
/* loaded from: classes3.dex */
final class zzho implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzho zza = new zzho();
    private static final FieldDescriptor zzaA;
    private static final FieldDescriptor zzaB;
    private static final FieldDescriptor zzaC;
    private static final FieldDescriptor zzaD;
    private static final FieldDescriptor zzaE;
    private static final FieldDescriptor zzaF;
    private static final FieldDescriptor zzaG;
    private static final FieldDescriptor zzaH;
    private static final FieldDescriptor zzaI;
    private static final FieldDescriptor zzaJ;
    private static final FieldDescriptor zzaK;
    private static final FieldDescriptor zzaL;
    private static final FieldDescriptor zzaM;
    private static final FieldDescriptor zzaN;
    private static final FieldDescriptor zzaO;
    private static final FieldDescriptor zzaP;
    private static final FieldDescriptor zzaQ;
    private static final FieldDescriptor zzaR;
    private static final FieldDescriptor zzaS;
    private static final FieldDescriptor zzaT;
    private static final FieldDescriptor zzaU;
    private static final FieldDescriptor zzaV;
    private static final FieldDescriptor zzaW;
    private static final FieldDescriptor zzaX;
    private static final FieldDescriptor zzaY;
    private static final FieldDescriptor zzaZ;
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzax;
    private static final FieldDescriptor zzay;
    private static final FieldDescriptor zzaz;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzba;
    private static final FieldDescriptor zzbb;
    private static final FieldDescriptor zzbc;
    private static final FieldDescriptor zzbd;
    private static final FieldDescriptor zzbe;
    private static final FieldDescriptor zzbf;
    private static final FieldDescriptor zzbg;
    private static final FieldDescriptor zzbh;
    private static final FieldDescriptor zzbi;
    private static final FieldDescriptor zzbj;
    private static final FieldDescriptor zzbk;
    private static final FieldDescriptor zzbl;
    private static final FieldDescriptor zzbm;
    private static final FieldDescriptor zzbn;
    private static final FieldDescriptor zzbo;
    private static final FieldDescriptor zzbp;
    private static final FieldDescriptor zzbq;
    private static final FieldDescriptor zzbr;
    private static final FieldDescriptor zzbs;
    private static final FieldDescriptor zzbt;
    private static final FieldDescriptor zzbu;
    private static final FieldDescriptor zzbv;
    private static final FieldDescriptor zzbw;
    private static final FieldDescriptor zzbx;
    private static final FieldDescriptor zzby;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzbx zzbxVar = new zzbx();
        zzbxVar.zza(1);
        zzb = builder.withProperty(zzbxVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzbx zzbxVar2 = new zzbx();
        zzbxVar2.zza(2);
        zzc = builder2.withProperty(zzbxVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzbx zzbxVar3 = new zzbx();
        zzbxVar3.zza(37);
        zzd = builder3.withProperty(zzbxVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzbx zzbxVar4 = new zzbx();
        zzbxVar4.zza(61);
        zze = builder4.withProperty(zzbxVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzbx zzbxVar5 = new zzbx();
        zzbxVar5.zza(3);
        zzf = builder5.withProperty(zzbxVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzbx zzbxVar6 = new zzbx();
        zzbxVar6.zza(20);
        zzg = builder6.withProperty(zzbxVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzbx zzbxVar7 = new zzbx();
        zzbxVar7.zza(4);
        zzh = builder7.withProperty(zzbxVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzbx zzbxVar8 = new zzbx();
        zzbxVar8.zza(29);
        zzi = builder8.withProperty(zzbxVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzbx zzbxVar9 = new zzbx();
        zzbxVar9.zza(5);
        zzj = builder9.withProperty(zzbxVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzbx zzbxVar10 = new zzbx();
        zzbxVar10.zza(59);
        zzk = builder10.withProperty(zzbxVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzbx zzbxVar11 = new zzbx();
        zzbxVar11.zza(6);
        zzl = builder11.withProperty(zzbxVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceTextDetectionLoadLogEvent");
        zzbx zzbxVar12 = new zzbx();
        zzbxVar12.zza(79);
        zzm = builder12.withProperty(zzbxVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzbx zzbxVar13 = new zzbx();
        zzbxVar13.zza(7);
        zzn = builder13.withProperty(zzbxVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzbx zzbxVar14 = new zzbx();
        zzbxVar14.zza(58);
        zzo = builder14.withProperty(zzbxVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzbx zzbxVar15 = new zzbx();
        zzbxVar15.zza(48);
        zzp = builder15.withProperty(zzbxVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzbx zzbxVar16 = new zzbx();
        zzbxVar16.zza(49);
        zzq = builder16.withProperty(zzbxVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzbx zzbxVar17 = new zzbx();
        zzbxVar17.zza(18);
        zzr = builder17.withProperty(zzbxVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzbx zzbxVar18 = new zzbx();
        zzbxVar18.zza(26);
        zzs = builder18.withProperty(zzbxVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzbx zzbxVar19 = new zzbx();
        zzbxVar19.zza(27);
        zzt = builder19.withProperty(zzbxVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzbx zzbxVar20 = new zzbx();
        zzbxVar20.zza(28);
        zzu = builder20.withProperty(zzbxVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzbx zzbxVar21 = new zzbx();
        zzbxVar21.zza(44);
        zzv = builder21.withProperty(zzbxVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzbx zzbxVar22 = new zzbx();
        zzbxVar22.zza(45);
        zzw = builder22.withProperty(zzbxVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzbx zzbxVar23 = new zzbx();
        zzbxVar23.zza(19);
        zzx = builder23.withProperty(zzbxVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzbx zzbxVar24 = new zzbx();
        zzbxVar24.zza(21);
        zzy = builder24.withProperty(zzbxVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzbx zzbxVar25 = new zzbx();
        zzbxVar25.zza(22);
        zzz = builder25.withProperty(zzbxVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzbx zzbxVar26 = new zzbx();
        zzbxVar26.zza(8);
        zzA = builder26.withProperty(zzbxVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzbx zzbxVar27 = new zzbx();
        zzbxVar27.zza(9);
        zzB = builder27.withProperty(zzbxVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzbx zzbxVar28 = new zzbx();
        zzbxVar28.zza(10);
        zzC = builder28.withProperty(zzbxVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzbx zzbxVar29 = new zzbx();
        zzbxVar29.zza(11);
        zzD = builder29.withProperty(zzbxVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzbx zzbxVar30 = new zzbx();
        zzbxVar30.zza(12);
        zzE = builder30.withProperty(zzbxVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzbx zzbxVar31 = new zzbx();
        zzbxVar31.zza(13);
        zzF = builder31.withProperty(zzbxVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzbx zzbxVar32 = new zzbx();
        zzbxVar32.zza(14);
        zzG = builder32.withProperty(zzbxVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzbx zzbxVar33 = new zzbx();
        zzbxVar33.zza(15);
        zzH = builder33.withProperty(zzbxVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzbx zzbxVar34 = new zzbx();
        zzbxVar34.zza(16);
        zzI = builder34.withProperty(zzbxVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzbx zzbxVar35 = new zzbx();
        zzbxVar35.zza(17);
        zzJ = builder35.withProperty(zzbxVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzbx zzbxVar36 = new zzbx();
        zzbxVar36.zza(23);
        zzK = builder36.withProperty(zzbxVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzbx zzbxVar37 = new zzbx();
        zzbxVar37.zza(24);
        zzL = builder37.withProperty(zzbxVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzbx zzbxVar38 = new zzbx();
        zzbxVar38.zza(25);
        zzM = builder38.withProperty(zzbxVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzbx zzbxVar39 = new zzbx();
        zzbxVar39.zza(39);
        zzN = builder39.withProperty(zzbxVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("deleteModelLogEvent");
        zzbx zzbxVar40 = new zzbx();
        zzbxVar40.zza(40);
        zzO = builder40.withProperty(zzbxVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzbx zzbxVar41 = new zzbx();
        zzbxVar41.zza(30);
        zzP = builder41.withProperty(zzbxVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzbx zzbxVar42 = new zzbx();
        zzbxVar42.zza(31);
        zzQ = builder42.withProperty(zzbxVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzbx zzbxVar43 = new zzbx();
        zzbxVar43.zza(32);
        zzR = builder43.withProperty(zzbxVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzbx zzbxVar44 = new zzbx();
        zzbxVar44.zza(33);
        zzS = builder44.withProperty(zzbxVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzbx zzbxVar45 = new zzbx();
        zzbxVar45.zza(34);
        zzT = builder45.withProperty(zzbxVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzbx zzbxVar46 = new zzbx();
        zzbxVar46.zza(35);
        zzU = builder46.withProperty(zzbxVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzbx zzbxVar47 = new zzbx();
        zzbxVar47.zza(36);
        zzV = builder47.withProperty(zzbxVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzbx zzbxVar48 = new zzbx();
        zzbxVar48.zza(46);
        zzW = builder48.withProperty(zzbxVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzbx zzbxVar49 = new zzbx();
        zzbxVar49.zza(47);
        zzX = builder49.withProperty(zzbxVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzbx zzbxVar50 = new zzbx();
        zzbxVar50.zza(69);
        zzY = builder50.withProperty(zzbxVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzbx zzbxVar51 = new zzbx();
        zzbxVar51.zza(42);
        zzZ = builder51.withProperty(zzbxVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzbx zzbxVar52 = new zzbx();
        zzbxVar52.zza(50);
        zzaa = builder52.withProperty(zzbxVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("leakedHandleEvent");
        zzbx zzbxVar53 = new zzbx();
        zzbxVar53.zza(51);
        zzab = builder53.withProperty(zzbxVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzbx zzbxVar54 = new zzbx();
        zzbxVar54.zza(52);
        zzac = builder54.withProperty(zzbxVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzbx zzbxVar55 = new zzbx();
        zzbxVar55.zza(53);
        zzad = builder55.withProperty(zzbxVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzbx zzbxVar56 = new zzbx();
        zzbxVar56.zza(54);
        zzae = builder56.withProperty(zzbxVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzbx zzbxVar57 = new zzbx();
        zzbxVar57.zza(60);
        zzaf = builder57.withProperty(zzbxVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("documentDetectionOptionalModuleLogEvent");
        zzbx zzbxVar58 = new zzbx();
        zzbxVar58.zza(85);
        zzag = builder58.withProperty(zzbxVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("documentCroppingOptionalModuleLogEvent");
        zzbx zzbxVar59 = new zzbx();
        zzbxVar59.zza(86);
        zzah = builder59.withProperty(zzbxVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("documentEnhancementOptionalModuleLogEvent");
        zzbx zzbxVar60 = new zzbx();
        zzbxVar60.zza(87);
        zzai = builder60.withProperty(zzbxVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzbx zzbxVar61 = new zzbx();
        zzbxVar61.zza(55);
        zzaj = builder61.withProperty(zzbxVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzbx zzbxVar62 = new zzbx();
        zzbxVar62.zza(56);
        zzak = builder62.withProperty(zzbxVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzbx zzbxVar63 = new zzbx();
        zzbxVar63.zza(57);
        zzal = builder63.withProperty(zzbxVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzbx zzbxVar64 = new zzbx();
        zzbxVar64.zza(62);
        zzam = builder64.withProperty(zzbxVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzbx zzbxVar65 = new zzbx();
        zzbxVar65.zza(63);
        zzan = builder65.withProperty(zzbxVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzbx zzbxVar66 = new zzbx();
        zzbxVar66.zza(64);
        zzao = builder66.withProperty(zzbxVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzbx zzbxVar67 = new zzbx();
        zzbxVar67.zza(65);
        zzap = builder67.withProperty(zzbxVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzbx zzbxVar68 = new zzbx();
        zzbxVar68.zza(66);
        zzaq = builder68.withProperty(zzbxVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzbx zzbxVar69 = new zzbx();
        zzbxVar69.zza(67);
        zzar = builder69.withProperty(zzbxVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzbx zzbxVar70 = new zzbx();
        zzbxVar70.zza(68);
        zzas = builder70.withProperty(zzbxVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzbx zzbxVar71 = new zzbx();
        zzbxVar71.zza(70);
        zzat = builder71.withProperty(zzbxVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzbx zzbxVar72 = new zzbx();
        zzbxVar72.zza(71);
        zzau = builder72.withProperty(zzbxVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzbx zzbxVar73 = new zzbx();
        zzbxVar73.zza(72);
        zzav = builder73.withProperty(zzbxVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzbx zzbxVar74 = new zzbx();
        zzbxVar74.zza(73);
        zzaw = builder74.withProperty(zzbxVar74.zzb()).build();
        FieldDescriptor.Builder builder75 = FieldDescriptor.builder("onDeviceFaceMeshCreateLogEvent");
        zzbx zzbxVar75 = new zzbx();
        zzbxVar75.zza(74);
        zzax = builder75.withProperty(zzbxVar75.zzb()).build();
        FieldDescriptor.Builder builder76 = FieldDescriptor.builder("onDeviceFaceMeshLoadLogEvent");
        zzbx zzbxVar76 = new zzbx();
        zzbxVar76.zza(75);
        zzay = builder76.withProperty(zzbxVar76.zzb()).build();
        FieldDescriptor.Builder builder77 = FieldDescriptor.builder("onDeviceFaceMeshLogEvent");
        zzbx zzbxVar77 = new zzbx();
        zzbxVar77.zza(76);
        zzaz = builder77.withProperty(zzbxVar77.zzb()).build();
        FieldDescriptor.Builder builder78 = FieldDescriptor.builder("aggregatedOnDeviceFaceMeshLogEvent");
        zzbx zzbxVar78 = new zzbx();
        zzbxVar78.zza(77);
        zzaA = builder78.withProperty(zzbxVar78.zzb()).build();
        FieldDescriptor.Builder builder79 = FieldDescriptor.builder("smartReplyOptionalModuleLogEvent");
        zzbx zzbxVar79 = new zzbx();
        zzbxVar79.zza(78);
        zzaB = builder79.withProperty(zzbxVar79.zzb()).build();
        FieldDescriptor.Builder builder80 = FieldDescriptor.builder("textDetectionOptionalModuleLogEvent");
        zzbx zzbxVar80 = new zzbx();
        zzbxVar80.zza(80);
        zzaC = builder80.withProperty(zzbxVar80.zzb()).build();
        FieldDescriptor.Builder builder81 = FieldDescriptor.builder("onDeviceImageQualityAnalysisCreateLogEvent");
        zzbx zzbxVar81 = new zzbx();
        zzbxVar81.zza(81);
        zzaD = builder81.withProperty(zzbxVar81.zzb()).build();
        FieldDescriptor.Builder builder82 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLoadLogEvent");
        zzbx zzbxVar82 = new zzbx();
        zzbxVar82.zza(82);
        zzaE = builder82.withProperty(zzbxVar82.zzb()).build();
        FieldDescriptor.Builder builder83 = FieldDescriptor.builder("onDeviceImageQualityAnalysisLogEvent");
        zzbx zzbxVar83 = new zzbx();
        zzbxVar83.zza(83);
        zzaF = builder83.withProperty(zzbxVar83.zzb()).build();
        FieldDescriptor.Builder builder84 = FieldDescriptor.builder("aggregatedOnDeviceImageQualityAnalysisLogEvent");
        zzbx zzbxVar84 = new zzbx();
        zzbxVar84.zza(84);
        zzaG = builder84.withProperty(zzbxVar84.zzb()).build();
        FieldDescriptor.Builder builder85 = FieldDescriptor.builder("imageQualityAnalysisOptionalModuleLogEvent");
        zzbx zzbxVar85 = new zzbx();
        zzbxVar85.zza(88);
        zzaH = builder85.withProperty(zzbxVar85.zzb()).build();
        FieldDescriptor.Builder builder86 = FieldDescriptor.builder("imageCaptioningOptionalModuleLogEvent");
        zzbx zzbxVar86 = new zzbx();
        zzbxVar86.zza(89);
        zzaI = builder86.withProperty(zzbxVar86.zzb()).build();
        FieldDescriptor.Builder builder87 = FieldDescriptor.builder("onDeviceImageCaptioningCreateLogEvent");
        zzbx zzbxVar87 = new zzbx();
        zzbxVar87.zza(90);
        zzaJ = builder87.withProperty(zzbxVar87.zzb()).build();
        FieldDescriptor.Builder builder88 = FieldDescriptor.builder("onDeviceImageCaptioningLoadLogEvent");
        zzbx zzbxVar88 = new zzbx();
        zzbxVar88.zza(91);
        zzaK = builder88.withProperty(zzbxVar88.zzb()).build();
        FieldDescriptor.Builder builder89 = FieldDescriptor.builder("onDeviceImageCaptioningInferenceLogEvent");
        zzbx zzbxVar89 = new zzbx();
        zzbxVar89.zza(92);
        zzaL = builder89.withProperty(zzbxVar89.zzb()).build();
        FieldDescriptor.Builder builder90 = FieldDescriptor.builder("aggregatedOnDeviceImageCaptioningInferenceLogEvent");
        zzbx zzbxVar90 = new zzbx();
        zzbxVar90.zza(93);
        zzaM = builder90.withProperty(zzbxVar90.zzb()).build();
        FieldDescriptor.Builder builder91 = FieldDescriptor.builder("onDeviceDocumentDetectionCreateLogEvent");
        zzbx zzbxVar91 = new zzbx();
        zzbxVar91.zza(94);
        zzaN = builder91.withProperty(zzbxVar91.zzb()).build();
        FieldDescriptor.Builder builder92 = FieldDescriptor.builder("onDeviceDocumentDetectionLoadLogEvent");
        zzbx zzbxVar92 = new zzbx();
        zzbxVar92.zza(95);
        zzaO = builder92.withProperty(zzbxVar92.zzb()).build();
        FieldDescriptor.Builder builder93 = FieldDescriptor.builder("onDeviceDocumentDetectionLogEvent");
        zzbx zzbxVar93 = new zzbx();
        zzbxVar93.zza(96);
        zzaP = builder93.withProperty(zzbxVar93.zzb()).build();
        FieldDescriptor.Builder builder94 = FieldDescriptor.builder("aggregatedOnDeviceDocumentDetectionLogEvent");
        zzbx zzbxVar94 = new zzbx();
        zzbxVar94.zza(97);
        zzaQ = builder94.withProperty(zzbxVar94.zzb()).build();
        FieldDescriptor.Builder builder95 = FieldDescriptor.builder("onDeviceDocumentCroppingCreateLogEvent");
        zzbx zzbxVar95 = new zzbx();
        zzbxVar95.zza(98);
        zzaR = builder95.withProperty(zzbxVar95.zzb()).build();
        FieldDescriptor.Builder builder96 = FieldDescriptor.builder("onDeviceDocumentCroppingLoadLogEvent");
        zzbx zzbxVar96 = new zzbx();
        zzbxVar96.zza(99);
        zzaS = builder96.withProperty(zzbxVar96.zzb()).build();
        FieldDescriptor.Builder builder97 = FieldDescriptor.builder("onDeviceDocumentCroppingLogEvent");
        zzbx zzbxVar97 = new zzbx();
        zzbxVar97.zza(100);
        zzaT = builder97.withProperty(zzbxVar97.zzb()).build();
        FieldDescriptor.Builder builder98 = FieldDescriptor.builder("aggregatedOnDeviceDocumentCroppingLogEvent");
        zzbx zzbxVar98 = new zzbx();
        zzbxVar98.zza(101);
        zzaU = builder98.withProperty(zzbxVar98.zzb()).build();
        FieldDescriptor.Builder builder99 = FieldDescriptor.builder("onDeviceDocumentEnhancementCreateLogEvent");
        zzbx zzbxVar99 = new zzbx();
        zzbxVar99.zza(102);
        zzaV = builder99.withProperty(zzbxVar99.zzb()).build();
        FieldDescriptor.Builder builder100 = FieldDescriptor.builder("onDeviceDocumentEnhancementLoadLogEvent");
        zzbx zzbxVar100 = new zzbx();
        zzbxVar100.zza(103);
        zzaW = builder100.withProperty(zzbxVar100.zzb()).build();
        FieldDescriptor.Builder builder101 = FieldDescriptor.builder("onDeviceDocumentEnhancementLogEvent");
        zzbx zzbxVar101 = new zzbx();
        zzbxVar101.zza(LocationRequestCompat.QUALITY_LOW_POWER);
        zzaX = builder101.withProperty(zzbxVar101.zzb()).build();
        FieldDescriptor.Builder builder102 = FieldDescriptor.builder("aggregatedOnDeviceDocumentEnhancementLogEvent");
        zzbx zzbxVar102 = new zzbx();
        zzbxVar102.zza(105);
        zzaY = builder102.withProperty(zzbxVar102.zzb()).build();
        FieldDescriptor.Builder builder103 = FieldDescriptor.builder("scannerAutoZoomEvent");
        zzbx zzbxVar103 = new zzbx();
        zzbxVar103.zza(106);
        zzaZ = builder103.withProperty(zzbxVar103.zzb()).build();
        FieldDescriptor.Builder builder104 = FieldDescriptor.builder("lowLightAutoExposureComputationEvent");
        zzbx zzbxVar104 = new zzbx();
        zzbxVar104.zza(107);
        zzba = builder104.withProperty(zzbxVar104.zzb()).build();
        FieldDescriptor.Builder builder105 = FieldDescriptor.builder("lowLightFrameProcessEvent");
        zzbx zzbxVar105 = new zzbx();
        zzbxVar105.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR);
        zzbb = builder105.withProperty(zzbxVar105.zzb()).build();
        FieldDescriptor.Builder builder106 = FieldDescriptor.builder("lowLightSceneDetectionEvent");
        zzbx zzbxVar106 = new zzbx();
        zzbxVar106.zza(AppCompatDelegate.FEATURE_SUPPORT_ACTION_BAR_OVERLAY);
        zzbc = builder106.withProperty(zzbxVar106.zzb()).build();
        FieldDescriptor.Builder builder107 = FieldDescriptor.builder("onDeviceStainRemovalLogEvent");
        zzbx zzbxVar107 = new zzbx();
        zzbxVar107.zza(110);
        zzbd = builder107.withProperty(zzbxVar107.zzb()).build();
        FieldDescriptor.Builder builder108 = FieldDescriptor.builder("aggregatedOnDeviceStainRemovalLogEvent");
        zzbx zzbxVar108 = new zzbx();
        zzbxVar108.zza(111);
        zzbe = builder108.withProperty(zzbxVar108.zzb()).build();
        FieldDescriptor.Builder builder109 = FieldDescriptor.builder("stainRemovalOptionalModuleLogEvent");
        zzbx zzbxVar109 = new zzbx();
        zzbxVar109.zza(OctetSequenceKeyGenerator.MIN_KEY_SIZE_BITS);
        zzbf = builder109.withProperty(zzbxVar109.zzb()).build();
        FieldDescriptor.Builder builder110 = FieldDescriptor.builder("onDeviceShadowRemovalLogEvent");
        zzbx zzbxVar110 = new zzbx();
        zzbxVar110.zza(113);
        zzbg = builder110.withProperty(zzbxVar110.zzb()).build();
        FieldDescriptor.Builder builder111 = FieldDescriptor.builder("aggregatedOnDeviceShadowRemovalLogEvent");
        zzbx zzbxVar111 = new zzbx();
        zzbxVar111.zza(114);
        zzbh = builder111.withProperty(zzbxVar111.zzb()).build();
        FieldDescriptor.Builder builder112 = FieldDescriptor.builder("shadowRemovalOptionalModuleLogEvent");
        zzbx zzbxVar112 = new zzbx();
        zzbxVar112.zza(115);
        zzbi = builder112.withProperty(zzbxVar112.zzb()).build();
        FieldDescriptor.Builder builder113 = FieldDescriptor.builder("onDeviceDigitalInkSegmentationLogEvent");
        zzbx zzbxVar113 = new zzbx();
        zzbxVar113.zza(116);
        zzbj = builder113.withProperty(zzbxVar113.zzb()).build();
        FieldDescriptor.Builder builder114 = FieldDescriptor.builder("onDeviceDocumentScannerStartLogEvent");
        zzbx zzbxVar114 = new zzbx();
        zzbxVar114.zza(117);
        zzbk = builder114.withProperty(zzbxVar114.zzb()).build();
        FieldDescriptor.Builder builder115 = FieldDescriptor.builder("onDeviceDocumentScannerFinishLogEvent");
        zzbx zzbxVar115 = new zzbx();
        zzbxVar115.zza(118);
        zzbl = builder115.withProperty(zzbxVar115.zzb()).build();
        FieldDescriptor.Builder builder116 = FieldDescriptor.builder("onDeviceDocumentScannerUiStartLogEvent");
        zzbx zzbxVar116 = new zzbx();
        zzbxVar116.zza(119);
        zzbm = builder116.withProperty(zzbxVar116.zzb()).build();
        FieldDescriptor.Builder builder117 = FieldDescriptor.builder("onDeviceDocumentScannerUiFinishLogEvent");
        zzbx zzbxVar117 = new zzbx();
        zzbxVar117.zza(120);
        zzbn = builder117.withProperty(zzbxVar117.zzb()).build();
        FieldDescriptor.Builder builder118 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionStartLogEvent");
        zzbx zzbxVar118 = new zzbx();
        zzbxVar118.zza(121);
        zzbo = builder118.withProperty(zzbxVar118.zzb()).build();
        FieldDescriptor.Builder builder119 = FieldDescriptor.builder("documentScannerUiOptionalModuleSessionFinishLogEvent");
        zzbx zzbxVar119 = new zzbx();
        zzbxVar119.zza(122);
        zzbp = builder119.withProperty(zzbxVar119.zzb()).build();
        FieldDescriptor.Builder builder120 = FieldDescriptor.builder("onDeviceDocumentScannerUiCreateLogEvent");
        zzbx zzbxVar120 = new zzbx();
        zzbxVar120.zza(123);
        zzbq = builder120.withProperty(zzbxVar120.zzb()).build();
        FieldDescriptor.Builder builder121 = FieldDescriptor.builder("onDeviceSubjectSegmentationCreateLogEvent");
        zzbx zzbxVar121 = new zzbx();
        zzbxVar121.zza(124);
        zzbr = builder121.withProperty(zzbxVar121.zzb()).build();
        FieldDescriptor.Builder builder122 = FieldDescriptor.builder("onDeviceSubjectSegmentationLoadLogEvent");
        zzbx zzbxVar122 = new zzbx();
        zzbxVar122.zza(125);
        zzbs = builder122.withProperty(zzbxVar122.zzb()).build();
        FieldDescriptor.Builder builder123 = FieldDescriptor.builder("onDeviceSubjectSegmentationInferenceLogEvent");
        zzbx zzbxVar123 = new zzbx();
        zzbxVar123.zza(WebSocketProtocol.PAYLOAD_SHORT);
        zzbt = builder123.withProperty(zzbxVar123.zzb()).build();
        FieldDescriptor.Builder builder124 = FieldDescriptor.builder("aggregatedOnDeviceSubjectSegmentationLogEvent");
        zzbx zzbxVar124 = new zzbx();
        zzbxVar124.zza(127);
        zzbu = builder124.withProperty(zzbxVar124.zzb()).build();
        FieldDescriptor.Builder builder125 = FieldDescriptor.builder("subjectSegmentationOptionalModuleLogEvent");
        zzbx zzbxVar125 = new zzbx();
        zzbxVar125.zza(128);
        zzbv = builder125.withProperty(zzbxVar125.zzb()).build();
        FieldDescriptor.Builder builder126 = FieldDescriptor.builder("documentScannerUiModuleScreenViewEvent");
        zzbx zzbxVar126 = new zzbx();
        zzbxVar126.zza(129);
        zzbw = builder126.withProperty(zzbxVar126.zzb()).build();
        FieldDescriptor.Builder builder127 = FieldDescriptor.builder("documentScannerUiModuleScreenClickEvent");
        zzbx zzbxVar127 = new zzbx();
        zzbxVar127.zza(130);
        zzbx = builder127.withProperty(zzbxVar127.zzb()).build();
        FieldDescriptor.Builder builder128 = FieldDescriptor.builder("documentScannerUiModuleScreenErrorEvent");
        zzbx zzbxVar128 = new zzbx();
        zzbxVar128.zza(131);
        zzby = builder128.withProperty(zzbxVar128.zzb()).build();
    }

    private zzho() {
    }

    @Override // com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zznz zznzVar = (zznz) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zznzVar.zzd());
        objectEncoderContext2.add(zzc, zznzVar.zzc());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, zznzVar.zzb());
        objectEncoderContext2.add(zzf, (Object) null);
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, (Object) null);
        objectEncoderContext2.add(zzn, (Object) null);
        objectEncoderContext2.add(zzo, (Object) null);
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, (Object) null);
        objectEncoderContext2.add(zzN, (Object) null);
        objectEncoderContext2.add(zzO, (Object) null);
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, (Object) null);
        objectEncoderContext2.add(zzS, (Object) null);
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, (Object) null);
        objectEncoderContext2.add(zzaa, (Object) null);
        objectEncoderContext2.add(zzab, (Object) null);
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, zznzVar.zza());
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
        objectEncoderContext2.add(zzap, (Object) null);
        objectEncoderContext2.add(zzaq, (Object) null);
        objectEncoderContext2.add(zzar, (Object) null);
        objectEncoderContext2.add(zzas, (Object) null);
        objectEncoderContext2.add(zzat, (Object) null);
        objectEncoderContext2.add(zzau, (Object) null);
        objectEncoderContext2.add(zzav, (Object) null);
        objectEncoderContext2.add(zzaw, (Object) null);
        objectEncoderContext2.add(zzax, (Object) null);
        objectEncoderContext2.add(zzay, (Object) null);
        objectEncoderContext2.add(zzaz, (Object) null);
        objectEncoderContext2.add(zzaA, (Object) null);
        objectEncoderContext2.add(zzaB, (Object) null);
        objectEncoderContext2.add(zzaC, (Object) null);
        objectEncoderContext2.add(zzaD, (Object) null);
        objectEncoderContext2.add(zzaE, (Object) null);
        objectEncoderContext2.add(zzaF, (Object) null);
        objectEncoderContext2.add(zzaG, (Object) null);
        objectEncoderContext2.add(zzaH, (Object) null);
        objectEncoderContext2.add(zzaI, (Object) null);
        objectEncoderContext2.add(zzaJ, (Object) null);
        objectEncoderContext2.add(zzaK, (Object) null);
        objectEncoderContext2.add(zzaL, (Object) null);
        objectEncoderContext2.add(zzaM, (Object) null);
        objectEncoderContext2.add(zzaN, (Object) null);
        objectEncoderContext2.add(zzaO, (Object) null);
        objectEncoderContext2.add(zzaP, (Object) null);
        objectEncoderContext2.add(zzaQ, (Object) null);
        objectEncoderContext2.add(zzaR, (Object) null);
        objectEncoderContext2.add(zzaS, (Object) null);
        objectEncoderContext2.add(zzaT, (Object) null);
        objectEncoderContext2.add(zzaU, (Object) null);
        objectEncoderContext2.add(zzaV, (Object) null);
        objectEncoderContext2.add(zzaW, (Object) null);
        objectEncoderContext2.add(zzaX, (Object) null);
        objectEncoderContext2.add(zzaY, (Object) null);
        objectEncoderContext2.add(zzaZ, (Object) null);
        objectEncoderContext2.add(zzba, (Object) null);
        objectEncoderContext2.add(zzbb, (Object) null);
        objectEncoderContext2.add(zzbc, (Object) null);
        objectEncoderContext2.add(zzbd, (Object) null);
        objectEncoderContext2.add(zzbe, (Object) null);
        objectEncoderContext2.add(zzbf, (Object) null);
        objectEncoderContext2.add(zzbg, (Object) null);
        objectEncoderContext2.add(zzbh, (Object) null);
        objectEncoderContext2.add(zzbi, (Object) null);
        objectEncoderContext2.add(zzbj, (Object) null);
        objectEncoderContext2.add(zzbk, (Object) null);
        objectEncoderContext2.add(zzbl, (Object) null);
        objectEncoderContext2.add(zzbm, (Object) null);
        objectEncoderContext2.add(zzbn, (Object) null);
        objectEncoderContext2.add(zzbo, (Object) null);
        objectEncoderContext2.add(zzbp, (Object) null);
        objectEncoderContext2.add(zzbq, (Object) null);
        objectEncoderContext2.add(zzbr, (Object) null);
        objectEncoderContext2.add(zzbs, (Object) null);
        objectEncoderContext2.add(zzbt, (Object) null);
        objectEncoderContext2.add(zzbu, (Object) null);
        objectEncoderContext2.add(zzbv, (Object) null);
        objectEncoderContext2.add(zzbw, (Object) null);
        objectEncoderContext2.add(zzbx, (Object) null);
        objectEncoderContext2.add(zzby, (Object) null);
    }
}
